Description: >
  Amazon EKS - Node Group

Parameters:
  ProjectName:
    Description: An Environment name that will be prefixed to resources
    Type: String
    Default: capstone

  ImageID:
    Description: An image ID for EC2 Instance
    Type: String
    Default: ami-00c698c24ede5b160

  KeyPairName:
    Description: The EC2 Key Pair to allow SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName
    Default: udacity-capstone

  DesiredInstances:
    Description: How many instances should be created.
    Type: Number
    Default: "4"

  MinSize:
    Description: Minimum number of web application servers
    Type: String
    Default: "2"

  MaxSize:
    Description: Maximum number of web application servers
    Type: String
    Default: "6"

Resources:
  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
        - !Ref InstanceRole

  InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
        - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly

  NodesSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for the nodes.
      VpcId:
        Fn::ImportValue: !Sub "${ProjectName}-vpcid"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 1025
          ToPort: 65535
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 1025
          ToPort: 65535
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: !Sub
            - "kubernetes.io/cluster/${EksId}"
            - EksId:
                Fn::ImportValue: !Sub "${ProjectName}-eks"
          Value: "owned"

  NodesAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      DesiredCapacity: !Sub ${DesiredInstances}
      LaunchConfigurationName: !Ref LaunchConfiguration
      MinSize: !Ref MinSize
      MaxSize: !Ref MaxSize
      VPCZoneIdentifier:
        Fn::Split:
          - ","
          - Fn::ImportValue:
              Fn::Sub: ${ProjectName}-pub-sbns
      Tags:
        - Key: Name
          Value: !Sub
            - "${EksId}-CapstoneNodesGroup-Node"
            - EksId:
                Fn::ImportValue: !Sub "${ProjectName}-eks"
          PropagateAtLaunch: "true"
        - Key: !Sub
            - "kubernetes.io/cluster/${EksId}"
            - EksId:
                Fn::ImportValue: !Sub "${ProjectName}-eks"
          Value: "owned"
          PropagateAtLaunch: "true"
    UpdatePolicy:
      AutoScalingRollingUpdate:
        MaxBatchSize: "1"
        MinInstancesInService: 3
        PauseTime: "PT5M"

  LaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      AssociatePublicIpAddress: "true"
      IamInstanceProfile: !Ref InstanceProfile
      ImageId: !Ref ImageID
      InstanceType: m5.large
      KeyName: !Ref KeyPairName
      SecurityGroups:
        - !Ref NodesSecurityGroup
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: 10
            VolumeType: gp2
            DeleteOnTermination: true
      UserData:
        Fn::Base64: !Sub
          - |
            #!/bin/bash
            set -o xtrace
            /etc/eks/bootstrap.sh ${EksId}
            /opt/aws/bin/cfn-signal --exit-code $? \
              --stack  ${AWS::StackName} \
              --resource NodesAutoScalingGroup  \
              --region ${AWS::Region}
          - EksId:
              Fn::ImportValue: !Sub "${ProjectName}-eks"